{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/CommentForm.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport ErrorDisplay from \"./ErrorDisplay\";\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentInput: \"\",\n      postError: null\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        article_id,\n        addComment\n      } = this.props;\n      const {\n        commentInput\n      } = this.state;\n      const newComment = {\n        username: this.props.username,\n        body: commentInput\n      };\n      api.postComment(newComment, article_id).then(comment => {\n        addComment(comment);\n      }); // .catch((err) => {\n      //   this.setState({\n      //     postError: {\n      //       status: err.response.status,\n      //       msg: err.response.data.message,\n      //     },\n      //   });\n      // });\n\n      this.setState({\n        commentInput: \"\"\n      });\n    };\n  }\n\n  render() {\n    const {\n      commentInput,\n      postError\n    } = this.state;\n    const {\n      username\n    } = this.props;\n    if (postError) return /*#__PURE__*/React.createElement(ErrorDisplay, {\n      status: postError.status,\n      msg: postError.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"usernameInput\",\n      value: username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Comment:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"have your say..\",\n      name: \"commentInput\",\n      value: commentInput,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/CommentForm.jsx"],"names":["React","Component","api","ErrorDisplay","CommentForm","state","commentInput","postError","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","article_id","addComment","props","newComment","username","body","postComment","then","comment","render","status","msg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD0B;;AAAA,SAmClCC,YAnCkC,GAmClBC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,KAAK,CAACG,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACD,KAvCiC;;AAAA,SAyClCI,YAzCkC,GAyClBL,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA6B,KAAKC,KAAxC;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAmB,KAAKD,KAA9B;AACA,YAAMc,UAAU,GAAG;AAAEC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAvB;AAAiCC,QAAAA,IAAI,EAAEf;AAAvC,OAAnB;AACAJ,MAAAA,GAAG,CAACoB,WAAJ,CAAgBH,UAAhB,EAA4BH,UAA5B,EAAwCO,IAAxC,CAA8CC,OAAD,IAAa;AACxDP,QAAAA,UAAU,CAACO,OAAD,CAAV;AACD,OAFD,EALwB,CAQxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAKX,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KA3DiC;AAAA;;AAKlCmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA8B,KAAKF,KAAzC;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAe,KAAKF,KAA1B;AACA,QAAIX,SAAJ,EACE,oBAAO,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,SAAS,CAACmB,MAAhC;AAAwC,MAAA,GAAG,EAAEnB,SAAS,CAACoB,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,KAAK,EAAEM,QAHT;AAIE,MAAA,QAAQ,EAAE,KAAKZ,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,KAAK,EAAEF,YAJT;AAKE,MAAA,QAAQ,EAAE,KAAKE,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF;AAwBD;;AAlCiC;;AA8DpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport ErrorDisplay from \"./ErrorDisplay\";\n\nclass CommentForm extends Component {\n  state = {\n    commentInput: \"\",\n    postError: null,\n  };\n  render() {\n    const { commentInput, postError } = this.state;\n    const { username } = this.props;\n    if (postError)\n      return <ErrorDisplay status={postError.status} msg={postError.msg} />;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            name=\"usernameInput\"\n            value={username}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Comment:\n          <input\n            type=\"text\"\n            placeholder=\"have your say..\"\n            name=\"commentInput\"\n            value={commentInput}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button>Submit</button>\n      </form>\n    );\n  }\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { article_id, addComment } = this.props;\n    const { commentInput } = this.state;\n    const newComment = { username: this.props.username, body: commentInput };\n    api.postComment(newComment, article_id).then((comment) => {\n      addComment(comment);\n    });\n    // .catch((err) => {\n    //   this.setState({\n    //     postError: {\n    //       status: err.response.status,\n    //       msg: err.response.data.message,\n    //     },\n    //   });\n    // });\n\n    this.setState({ commentInput: \"\" });\n  };\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}