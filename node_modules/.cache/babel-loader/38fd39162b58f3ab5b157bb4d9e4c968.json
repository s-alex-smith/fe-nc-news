{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/NavBar.jsx\";\nimport React, { Component } from \"react\";\nimport \"../styles/global.css\";\nimport * as api from \"../utils\";\nimport Loaded from \"./Loader\";\nimport Loader from \"./Loader\";\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topics: [// { slug: \"coding\", description: \"Code is love, code is life\" },\n        // { slug: \"football\", description: \"FOOTIE!\" },\n      ],\n      isLoading: true\n    };\n\n    this.componentDidMount = () => {\n      this.fetchTopics();\n    };\n\n    this.fetchTopics = () => {\n      api.getTopics().then(topics => {\n        this.setState({\n          topics,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      topics,\n      isLoading\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }\n    });else {\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"Nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, topics.map(topic => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: topic.slug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }\n        }, topic.slug);\n      })));\n    }\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/NavBar.jsx"],"names":["React","Component","api","Loaded","Loader","NavBar","state","topics","isLoading","componentDidMount","fetchTopics","getTopics","then","setState","render","map","topic","slug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,CACN;AACA;AAFM,OADF;AAKNC,MAAAA,SAAS,EAAE;AALL,KADqB;;AAAA,SAS7BC,iBAT6B,GAST,MAAM;AACxB,WAAKC,WAAL;AACD,KAX4B;;AAAA,SA6B7BA,WA7B6B,GA6Bf,MAAM;AAClBR,MAAAA,GAAG,CAACS,SAAJ,GAAgBC,IAAhB,CAAsBL,MAAD,IAAY;AAC/B,aAAKM,QAAL,CAAc;AAAEN,UAAAA,MAAF;AAAUC,UAAAA,SAAS,EAAE;AAArB,SAAd;AACD,OAFD;AAGD,KAjC4B;AAAA;;AAa7BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC;AACA,QAAIE,SAAJ,EAAe,oBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CAAf,KACK;AACH,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MAAM,CAACQ,GAAP,CAAYC,KAAD,IAAW;AACrB,4BAAO;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,KAAK,CAACC,IAA5B,CAAP;AACD,OAFA,CADH,CADF,CADF;AASD;AACF;;AA3B4B;;AAoC/B,eAAeZ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/global.css\";\nimport * as api from \"../utils\";\nimport Loaded from \"./Loader\";\nimport Loader from \"./Loader\";\n\nclass NavBar extends Component {\n  state = {\n    topics: [\n      // { slug: \"coding\", description: \"Code is love, code is life\" },\n      // { slug: \"football\", description: \"FOOTIE!\" },\n    ],\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    this.fetchTopics();\n  };\n\n  render() {\n    const { topics, isLoading } = this.state;\n    if (isLoading) return <Loader />;\n    else {\n      return (\n        <nav className=\"Nav\">\n          <ul>\n            {topics.map((topic) => {\n              return <li key={topic.slug}>{topic.slug}</li>;\n            })}\n          </ul>\n        </nav>\n      );\n    }\n  }\n\n  fetchTopics = () => {\n    api.getTopics().then((topics) => {\n      this.setState({ topics, isLoading: false });\n    });\n  };\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}