{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/ArticleList.jsx\";\nimport React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport * as api from \"../utils\";\nimport ArticleCard from \"./ArticleCard\";\n\nclass ArticleList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      isLoading: true\n    };\n\n    this.componentDidMount = () => {\n      const {\n        topic\n      } = this.props;\n      this.fetchArticles(topic);\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (prevProps.topic !== this.props.topic) {\n        this.fetchArticles();\n      }\n    };\n\n    this.fetchArticles = () => {\n      const {\n        topic\n      } = this.props;\n      console.log(topic);\n      api.getArticles(topic).then(articles => {\n        this.setState({\n          articles,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      articles,\n      isLoading\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, articles.map(article => {\n      return /*#__PURE__*/React.createElement(ArticleCard, {\n        article: article,\n        key: article.article_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }\n      });\n    }));\n  }\n\n}\n\nexport default ArticleList;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/ArticleList.jsx"],"names":["React","Component","Loader","api","ArticleCard","ArticleList","state","articles","isLoading","componentDidMount","topic","props","fetchArticles","componentDidUpdate","prevProps","prevState","console","log","getArticles","then","setState","render","map","article","article_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD0B;;AAAA,SAMlCC,iBANkC,GAMd,MAAM;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,WAAKC,aAAL,CAAmBF,KAAnB;AACD,KATiC;;AAAA,SAWlCG,kBAXkC,GAWb,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC7C,UAAID,SAAS,CAACJ,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAnC,EAA0C;AACxC,aAAKE,aAAL;AACD;AACF,KAfiC;;AAAA,SA6BlCA,aA7BkC,GA6BlB,MAAM;AACpB,YAAM;AAAEF,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAP,MAAAA,GAAG,CAACe,WAAJ,CAAgBR,KAAhB,EAAuBS,IAAvB,CAA6BZ,QAAD,IAAc;AACxC,aAAKa,QAAL,CAAc;AAAEb,UAAAA,QAAF;AAAYC,UAAAA,SAAS,EAAE;AAAvB,SAAd;AACD,OAFD;AAGD,KAnCiC;AAAA;;AAiBlCa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKF,KAArC;AACA,QAAIE,SAAJ,EAAe,oBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACf,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACe,GAAT,CAAcC,OAAD,IAAa;AACzB,0BAAO,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEA,OAAtB;AAA+B,QAAA,GAAG,EAAEA,OAAO,CAACC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,CADF;AAOD;;AA3BiC;;AAsCpC,eAAenB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport * as api from \"../utils\";\nimport ArticleCard from \"./ArticleCard\";\n\nclass ArticleList extends Component {\n  state = {\n    articles: [],\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    const { topic } = this.props;\n    this.fetchArticles(topic);\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.topic !== this.props.topic) {\n      this.fetchArticles();\n    }\n  };\n\n  render() {\n    const { articles, isLoading } = this.state;\n    if (isLoading) return <Loader />;\n    return (\n      <main>\n        {articles.map((article) => {\n          return <ArticleCard article={article} key={article.article_id} />;\n        })}\n      </main>\n    );\n  }\n\n  fetchArticles = () => {\n    const { topic } = this.props;\n    console.log(topic);\n    api.getArticles(topic).then((articles) => {\n      this.setState({ articles, isLoading: false });\n    });\n  };\n}\n\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}