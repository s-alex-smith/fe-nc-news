{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/SingleArticle.jsx\";\nimport React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport * as api from \"../utils\";\n\nclass SingleArticle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      article: {\n        article_id: 1,\n        title: \"Running a Node App\",\n        body: \"This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.\",\n        votes: 0,\n        topic: \"coding\",\n        author: \"jessjelly\",\n        created_at: \"2016-08-18T12:07:52.389Z\",\n        comment_count: \"8\"\n      },\n      isLoading: true\n    };\n  }\n\n  // componentWillMount = () => {\n  //   this.fetchSingleArticle();\n  // };\n  render() {\n    const {\n      article,\n      isLoading\n    } = this.state; // if (isLoading) return <Loader />;\n\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, article.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"written by: \", article.author), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, article.body), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Votes: \", article.votes));\n  } // fetchSingleArticle = () => {\n  //   const { article_id } = this.props;\n  //   api.getSingleArticle({ article_id }).then(({ article }) => {\n  //     this.setState({ article, isLoading: false });\n  //   });\n  // };\n\n\n}\n\nexport default SingleArticle;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/SingleArticle.jsx"],"names":["React","Component","Loader","api","SingleArticle","state","article","article_id","title","body","votes","topic","author","created_at","comment_count","isLoading","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCI,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,CADL;AAEPC,QAAAA,KAAK,EAAE,oBAFA;AAGPC,QAAAA,IAAI,EACF,4NAJK;AAKPC,QAAAA,KAAK,EAAE,CALA;AAMPC,QAAAA,KAAK,EAAE,QANA;AAOPC,QAAAA,MAAM,EAAE,WAPD;AAQPC,QAAAA,UAAU,EAAE,0BARL;AASPC,QAAAA,aAAa,EAAE;AATR,OADH;AAYNC,MAAAA,SAAS,EAAE;AAZL,KAD4B;AAAA;;AAgBpC;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,OAAF;AAAWS,MAAAA;AAAX,QAAyB,KAAKV,KAApC,CADO,CAEP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAO,CAACE,KAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBF,OAAO,CAACM,MAAxB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,OAAO,CAACG,IAAZ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWH,OAAO,CAACI,KAAnB,CAJF,CADF;AAQD,GA/BmC,CAiCpC;AACA;AACA;AACA;AACA;AACA;;;AAtCoC;;AAyCtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport * as api from \"../utils\";\n\nclass SingleArticle extends Component {\n  state = {\n    article: {\n      article_id: 1,\n      title: \"Running a Node App\",\n      body:\n        \"This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.\",\n      votes: 0,\n      topic: \"coding\",\n      author: \"jessjelly\",\n      created_at: \"2016-08-18T12:07:52.389Z\",\n      comment_count: \"8\",\n    },\n    isLoading: true,\n  };\n\n  // componentWillMount = () => {\n  //   this.fetchSingleArticle();\n  // };\n\n  render() {\n    const { article, isLoading } = this.state;\n    // if (isLoading) return <Loader />;\n    return (\n      <main>\n        <h3>{article.title}</h3>\n        <p>written by: {article.author}</p>\n        <p>{article.body}</p>\n        <p>Votes: {article.votes}</p>\n      </main>\n    );\n  }\n\n  // fetchSingleArticle = () => {\n  //   const { article_id } = this.props;\n  //   api.getSingleArticle({ article_id }).then(({ article }) => {\n  //     this.setState({ article, isLoading: false });\n  //   });\n  // };\n}\n\nexport default SingleArticle;\n"]},"metadata":{},"sourceType":"module"}