{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/Comments.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport CommentCard from \"./CommentCard\";\nimport Loader from \"./Loader\";\nimport CommentForm from \"./CommentForm\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n\n    this.componentDidMount = () => {\n      this.fetchComments();\n    };\n\n    this.fetchComments = () => {\n      const {\n        article_id\n      } = this.props;\n      api.getComments({\n        article_id\n      }).then(comments => {\n        this.setState({\n          comments,\n          isLoading: false\n        });\n      });\n    };\n\n    this.addComment = newComment => {\n      this.setState(({\n        comments\n      }) => {\n        return {\n          comments: [...comments, newComment]\n        };\n      });\n    };\n\n    this.removeComment = deletedComment_id => {\n      console.log(\"being called\");\n      this.setState(currentState => {\n        return {\n          comments: currentState.comments.filter(comment => comment.comment_id !== deletedComment_id)\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      comments,\n      isLoading\n    } = this.state;\n    const {\n      article_id\n    } = this.props;\n    if (isLoading) return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, comments.map(comment => {\n      return /*#__PURE__*/React.createElement(CommentCard, {\n        comment: comment,\n        username: this.props.username,\n        key: comment.comment_id,\n        removeComment: this.removeComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(CommentForm, {\n      article_id: article_id,\n      addComment: this.addComment,\n      username: this.props.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/Comments.jsx"],"names":["React","Component","api","CommentCard","Loader","CommentForm","Comments","state","comments","isLoading","componentDidMount","fetchComments","article_id","props","getComments","then","setState","addComment","newComment","removeComment","deletedComment_id","console","log","currentState","filter","comment","comment_id","render","map","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADuB;;AAAA,SAM/BC,iBAN+B,GAMX,MAAM;AACxB,WAAKC,aAAL;AACD,KAR8B;;AAAA,SAoC/BA,aApC+B,GAoCf,MAAM;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAX,MAAAA,GAAG,CAACY,WAAJ,CAAgB;AAAEF,QAAAA;AAAF,OAAhB,EAAgCG,IAAhC,CAAsCP,QAAD,IAAc;AACjD,aAAKQ,QAAL,CAAc;AAAER,UAAAA,QAAF;AAAYC,UAAAA,SAAS,EAAE;AAAvB,SAAd;AACD,OAFD;AAGD,KAzC8B;;AAAA,SA2C/BQ,UA3C+B,GA2CjBC,UAAD,IAAgB;AAC3B,WAAKF,QAAL,CAAc,CAAC;AAAER,QAAAA;AAAF,OAAD,KAAkB;AAC9B,eAAO;AAAEA,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcU,UAAd;AAAZ,SAAP;AACD,OAFD;AAGD,KA/C8B;;AAAA,SAiD/BC,aAjD+B,GAiDdC,iBAAD,IAAuB;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKN,QAAL,CAAeO,YAAD,IAAkB;AAC9B,eAAO;AACLf,UAAAA,QAAQ,EAAEe,YAAY,CAACf,QAAb,CAAsBgB,MAAtB,CACPC,OAAD,IAAaA,OAAO,CAACC,UAAR,KAAuBN,iBAD5B;AADL,SAAP;AAKD,OAND;AAOD,KA1D8B;AAAA;;AAU/BO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKF,KAArC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACA,QAAIJ,SAAJ,EAAe,oBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACf,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACoB,GAAT,CAAcH,OAAD,IAAa;AACzB,0BACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWgB,QAFvB;AAGE,QAAA,GAAG,EAAEJ,OAAO,CAACC,UAHf;AAIE,QAAA,aAAa,EAAE,KAAKP,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,CADF,eAaE,oBAAC,WAAD;AACE,MAAA,UAAU,EAAEP,UADd;AAEE,MAAA,UAAU,EAAE,KAAKK,UAFnB;AAGE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWgB,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAqBD;;AAnC8B;;AA6DjC,eAAevB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport CommentCard from \"./CommentCard\";\nimport Loader from \"./Loader\";\nimport CommentForm from \"./CommentForm\";\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    this.fetchComments();\n  };\n\n  render() {\n    const { comments, isLoading } = this.state;\n    const { article_id } = this.props;\n    if (isLoading) return <Loader />;\n    return (\n      <div>\n        <ul>\n          {comments.map((comment) => {\n            return (\n              <CommentCard\n                comment={comment}\n                username={this.props.username}\n                key={comment.comment_id}\n                removeComment={this.removeComment}\n              />\n            );\n          })}\n        </ul>\n        <CommentForm\n          article_id={article_id}\n          addComment={this.addComment}\n          username={this.props.username}\n        />\n      </div>\n    );\n  }\n  fetchComments = () => {\n    const { article_id } = this.props;\n    api.getComments({ article_id }).then((comments) => {\n      this.setState({ comments, isLoading: false });\n    });\n  };\n\n  addComment = (newComment) => {\n    this.setState(({ comments }) => {\n      return { comments: [...comments, newComment] };\n    });\n  };\n\n  removeComment = (deletedComment_id) => {\n    console.log(\"being called\");\n    this.setState((currentState) => {\n      return {\n        comments: currentState.comments.filter(\n          (comment) => comment.comment_id !== deletedComment_id\n        ),\n      };\n    });\n  };\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}