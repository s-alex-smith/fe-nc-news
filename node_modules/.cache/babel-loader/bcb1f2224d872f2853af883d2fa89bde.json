{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/Comments.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport CommentCard from \"./CommentCard\";\nimport Loader from \"./Loader\";\nimport CommentForm from \"./CommentForm\";\nimport ErrorDisplay from \"./ErrorDisplay\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true,\n      hasError: false\n    };\n\n    this.componentDidMount = () => {\n      this.fetchComments();\n    };\n\n    this.fetchComments = () => {\n      const {\n        article_id\n      } = this.props;\n      api.getComments({\n        article_id\n      }).then(comments => {\n        this.setState({\n          comments,\n          isLoading: false\n        });\n      }).catch(err => {\n        this.setState({\n          hasError: true\n        });\n      });\n    };\n\n    this.addComment = newComment => {\n      this.setState(({\n        comments\n      }) => {\n        return {\n          comments: [...comments, newComment]\n        };\n      }).catch(err => console.dir(err));\n    };\n\n    this.removeComment = deletedComment_id => {\n      console.log(\"removeComment called\");\n      this.setState(currentState => {\n        return {\n          comments: currentState.comments.filter(comment => comment.comment_id !== deletedComment_id)\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      comments,\n      isLoading,\n      hasError\n    } = this.state;\n    const {\n      article_id\n    } = this.props;\n    if (hasError) return /*#__PURE__*/React.createElement(ErrorDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    });\n    if (isLoading) return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, comments.map(comment => {\n      return /*#__PURE__*/React.createElement(CommentCard, {\n        comment: comment,\n        username: this.props.username,\n        key: comment.comment_id,\n        removeComment: this.removeComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(CommentForm, {\n      article_id: article_id,\n      addComment: this.addComment,\n      username: this.props.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/Comments.jsx"],"names":["React","Component","api","CommentCard","Loader","CommentForm","ErrorDisplay","Comments","state","comments","isLoading","hasError","componentDidMount","fetchComments","article_id","props","getComments","then","setState","catch","err","addComment","newComment","console","dir","removeComment","deletedComment_id","log","currentState","filter","comment","comment_id","render","map","username"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"../utils\";\nimport CommentCard from \"./CommentCard\";\nimport Loader from \"./Loader\";\nimport CommentForm from \"./CommentForm\";\nimport ErrorDisplay from \"./ErrorDisplay\";\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n    hasError: false,\n  };\n\n  componentDidMount = () => {\n    this.fetchComments();\n  };\n\n  render() {\n    const { comments, isLoading, hasError } = this.state;\n    const { article_id } = this.props;\n    if (hasError) return <ErrorDisplay />;\n    if (isLoading) return <Loader />;\n    return (\n      <div>\n        <ul>\n          {comments.map((comment) => {\n            return (\n              <CommentCard\n                comment={comment}\n                username={this.props.username}\n                key={comment.comment_id}\n                removeComment={this.removeComment}\n              />\n            );\n          })}\n        </ul>\n        <CommentForm\n          article_id={article_id}\n          addComment={this.addComment}\n          username={this.props.username}\n        />\n      </div>\n    );\n  }\n  fetchComments = () => {\n    const { article_id } = this.props;\n    api\n      .getComments({ article_id })\n      .then((comments) => {\n        this.setState({ comments, isLoading: false });\n      })\n      .catch((err) => {\n        this.setState({ hasError: true });\n      });\n  };\n\n  addComment = (newComment) => {\n    this.setState(({ comments }) => {\n      return { comments: [...comments, newComment] };\n    }).catch((err) => console.dir(err));\n  };\n\n  removeComment = (deletedComment_id) => {\n    console.log(\"removeComment called\");\n    this.setState((currentState) => {\n      return {\n        comments: currentState.comments.filter(\n          (comment) => comment.comment_id !== deletedComment_id\n        ),\n      };\n    });\n  };\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}