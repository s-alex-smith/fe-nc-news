{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/CommentForm.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"../utils\";\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentInput: \"\",\n      usernameInput: this.props.username,\n      postError: null\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        article_id,\n        addComment\n      } = this.props;\n      const {\n        usernameInput,\n        commentInput\n      } = this.state;\n      const newComment = {\n        username: usernameInput,\n        body: commentInput\n      };\n      api.postComment(newComment, article_id).then(comment => {\n        addComment(comment);\n      }).catch(err => {\n        this.setState({\n          postError: {\n            status: err.response.status,\n            msg: \"missing field\"\n          },\n          isLoading: false\n        });\n      });\n      this.setState({\n        commentInput: \"\",\n        usernameInput: this.props.username\n      });\n    };\n  }\n\n  render() {\n    const {\n      usernameInput,\n      commentInput,\n      postError\n    } = this.state;\n    if (postError) return {\n      alert: \"Missing field\"\n    };\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"usernameInput\",\n      value: usernameInput,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Comment:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"have your say..\",\n      name: \"commentInput\",\n      value: commentInput,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/alex/Desktop/northcoders/week-12/fe-nc-news/nc-news/src/components/CommentForm.jsx"],"names":["React","Component","api","CommentForm","state","commentInput","usernameInput","props","username","postError","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","article_id","addComment","newComment","body","postComment","then","comment","catch","err","status","response","msg","isLoading","render","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,QAFpB;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAD0B;;AAAA,SAkClCC,YAlCkC,GAkClBC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACD,KArCiC;;AAAA,SAuClCI,YAvCkC,GAuClBL,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA6B,KAAKZ,KAAxC;AACA,YAAM;AAAED,QAAAA,aAAF;AAAiBD,QAAAA;AAAjB,UAAkC,KAAKD,KAA7C;AACA,YAAMgB,UAAU,GAAG;AAAEZ,QAAAA,QAAQ,EAAEF,aAAZ;AAA2Be,QAAAA,IAAI,EAAEhB;AAAjC,OAAnB;AACAH,MAAAA,GAAG,CACAoB,WADH,CACeF,UADf,EAC2BF,UAD3B,EAEGK,IAFH,CAESC,OAAD,IAAa;AACjBL,QAAAA,UAAU,CAACK,OAAD,CAAV;AACD,OAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACd,aAAKX,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE;AACTkB,YAAAA,MAAM,EAAED,GAAG,CAACE,QAAJ,CAAaD,MADZ;AAETE,YAAAA,GAAG,EAAE;AAFI,WADC;AAKZC,UAAAA,SAAS,EAAE;AALC,SAAd;AAOD,OAbH;AAcA,WAAKf,QAAL,CAAc;AAAEV,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC;AAA9C,OAAd;AACD,KA3DiC;AAAA;;AAMlCuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,aAAF;AAAiBD,MAAAA,YAAjB;AAA+BI,MAAAA;AAA/B,QAA6C,KAAKL,KAAxD;AACA,QAAIK,SAAJ,EAAe,OAAO;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAP;AACf,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,KAAK,EAAEV,aAHT;AAIE,MAAA,QAAQ,EAAE,KAAKI,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,KAAK,EAAEL,YAJT;AAKE,MAAA,QAAQ,EAAE,KAAKK,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF;AAwBD;;AAjCiC;;AA8DpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"../utils\";\n\nclass CommentForm extends Component {\n  state = {\n    commentInput: \"\",\n    usernameInput: this.props.username,\n    postError: null,\n  };\n  render() {\n    const { usernameInput, commentInput, postError } = this.state;\n    if (postError) return { alert: \"Missing field\" };\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            name=\"usernameInput\"\n            value={usernameInput}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Comment:\n          <input\n            type=\"text\"\n            placeholder=\"have your say..\"\n            name=\"commentInput\"\n            value={commentInput}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button>Submit</button>\n      </form>\n    );\n  }\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { article_id, addComment } = this.props;\n    const { usernameInput, commentInput } = this.state;\n    const newComment = { username: usernameInput, body: commentInput };\n    api\n      .postComment(newComment, article_id)\n      .then((comment) => {\n        addComment(comment);\n      })\n      .catch((err) => {\n        this.setState({\n          postError: {\n            status: err.response.status,\n            msg: \"missing field\",\n          },\n          isLoading: false,\n        });\n      });\n    this.setState({ commentInput: \"\", usernameInput: this.props.username });\n  };\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}